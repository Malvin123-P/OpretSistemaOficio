@model IEnumerable<OfiGest.Models.UsuarioModel>
@{
    ViewData["Title"] = "Listado de Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var rolUsuario = Context.Session.GetString("RolUsuario");
}

<style>
    .btn-opret-sm {
        background-color: #3D6FAD;
        color: white;
        border: 1px solid #000000;
        padding: 4px 8px;
        font-size: 13px;
        font-weight: 600;
        border-radius: 4px;
        transition: background-color 0.2s ease, color 0.2s ease;
    }

        .btn-opret-sm:hover {
            background-color: #2f5c91;
            color: #ffffff;
        }

    .btn-opretEliminar-sm {
        background-color: #F20505;
        color: white;
        border: 1px solid #000000;
        padding: 4px 8px;
        font-size: 13px;
        font-weight: 600;
        border-radius: 4px;
        transition: background-color 0.2s ease, color 0.2s ease;
    }

        .btn-opretEliminar-sm:hover {
            background-color: #F20505;
            color: #ffffff;
        }

    .btn-azul {
        background-color: #3D6FAD;
        color: white;
        width: 100%;
        padding: 0.75rem;
        font-weight: bold;
        border-radius: 8px;
        transition: background-color 0.3s ease;
    }

        .btn-azul:hover {
            background-color: #2f5c91;
            color: white;
        }

    .search-box {
        border: 1px solid black;
        border-radius: 8px;
        padding: 0.5rem 1rem;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background-color: white;
    }

        .search-box input {
            border: none;
            outline: none;
            flex: 1;
        }

    .table-wrapper {
        max-height: auto;
        overflow-y: auto;
        border: 1px solid #dee2e6;
        border-radius: 6px;
    }

        .table-wrapper table {
            width: 100%;
            border-collapse: collapse;
        }

        .table-wrapper thead th {
            position: sticky;
            top: 0;
            background-color: #ffffff;
            border: 1px solid #dee2e6;
            z-index: 2;
        }

        .table-wrapper td {
            border: 1px solid #dee2e6;
            word-break: break-word;
            white-space: normal;
            vertical-align: top;
            padding: 0.5rem;
        }

            .table-wrapper td:empty {
                background-color: #f8f9fa;
            }

    .card-adjusted {
        height: 700px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        margin-top: 1rem;
        margin-bottom: 2rem;
        padding: 2rem;
    }

    .fila-deshabilitada {
        background-color: #f8d7da !important;
        color: #721c24;
    }

    /* Estilos para el indicador de restablecimiento */
    .requiere-restablecer {
        position: relative;
        background-color: #fff3cd !important;
     
    }

    .badge-restablecer {
        background-color: #ffc107;
        color: #856404;
        font-size: 0.7rem;
        font-weight: bold;
        padding: 2px 6px;
        border-radius: 10px;
        margin-left: 5px;
        animation: pulse 2s infinite;
    }

    .icono-restablecer {
        color: #ffc107;
        font-size: 1.1rem;
        margin-right: 5px;
        animation: shake 2s infinite;
    }

    .tooltip-restablecer {
        position: relative;
        display: inline-block;
    }

        .tooltip-restablecer .tooltip-text {
            visibility: hidden;
            width: 200px;
            background-color: #ffc107;
            color: #856404;
            text-align: center;
            border-radius: 6px;
            padding: 5px;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -100px;
            opacity: 0;
            transition: opacity 0.3s;
            font-size: 0.8rem;
            font-weight: normal;
        }

        .tooltip-restablecer:hover .tooltip-text {
            visibility: visible;
            opacity: 1;
        }

   

    .nombre-usuario {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .info-adicional {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .leyenda {
        display: flex;
        align-items: center;
        gap: 15px;
        flex-wrap: wrap;
    }

    .leyenda-item {
        display: flex;
        align-items: center;
        gap: 5px;
        font-size: 0.8rem;
    }
</style>

<div class="container-fluid d-flex flex-column compact-container">
    <h4 class="mt-3 mb-3">Listado de Usuarios</h4>

    <div class="card shadow-sm border-0 p-4 card-adjusted">
        <div class="search-box mb-3">
            <i class="bi bi-search" style="font-size: 1.2rem;"></i>
            <input type="text" id="searchInput" placeholder="Buscar por nombre, correo, departamento, división, rol o estado" />
        </div>

        <div class="d-flex justify-content-between align-items-center mb-2">
            <small id="contadorUsuarios" class="text-muted">Usuarios visibles: @Model.Count()</small>
            <div class="leyenda">
                <div class="leyenda-item">
                    <span class="badge-restablecer" style="animation: none;">Restablecer</span>
                    <span>Requiere restablecer contraseña</span>
                </div>
                <div class="leyenda-item">
                    <div style="width: 15px; height: 15px; background-color: #f8d7da; border-radius: 2px;"></div>
                    <span>Usuario inactivo</span>
                </div>
            </div>
        </div>

        <div class="table-wrapper mb-3">
            <table id="tablaUsuarios" class="table table-bordered table-striped align-middle mb-0">
                <thead>
                    <tr>
                        <th>Nombre Completo</th>
                        <th>Departamento</th>
                        <th>División</th>
                        <th>Rol</th>
                   
                            <th>Estado</th>
                     
                        <th class="text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var u in Model)
                    {
                        <tr class="@(u.Activo ? "" : "fila-deshabilitada") @(u.RequiereRestablecer ? "requiere-restablecer" : "")">
                            <td>
                                <div class="nombre-usuario">
                                    <span>@u.Nombre @u.Apellido</span>
                                    @if (u.RequiereRestablecer)
                                    {
                                        <div class="tooltip-restablecer info-adicional">
                                            <i class="bi bi-key icono-restablecer"></i>
                                            <span class="badge-restablecer">Restablecer</span>
                                            <span class="tooltip-text">El usuario debe cambiar su contraseña en el próximo inicio de sesión</span>
                                        </div>
                                    }
                                </div>
                            </td>
                            <td>@u.NombreDepartamento</td>
                            <td>@u.NombreDivision</td>
                            <td>@u.NombreRol</td>
                       
                                <td>
                                    <div class="d-flex align-items-center gap-2">
                                        @if (u.Activo)
                                        {
                                            <i class="bi bi-check-circle-fill text-success"></i>
                                            <span>Activo</span>
                                            
                                        }
                                        else
                                        {
                                            <i class="bi bi-x-circle-fill text-danger"></i>
                                            <span>Inactivo</span>
                                        }
                                    </div>
                                </td>
                            
                            <td class="text-center">
                                <div class="d-flex justify-content-center gap-2">
                              

                                
                                        <a asp-action="Edit" asp-route-id="@u.Id" class="btn-opret-sm" title="Editar">
                                            <i class="bi bi-pencil-square"></i>
                                        </a>
                                        @if (u.Activo)
                                        {
                                            <button type="button" class="btn-opretEliminar-sm" onclick="deleteItem(@u.Id)" title="Eliminar">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        }
                                      
                                    
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div id="noResults" class="text-muted text-center mt-2" style="display:none;">
                No se encontraron usuarios que coincidan con la búsqueda.
            </div>
        </div>
            <div class="mt-auto">
                <a asp-action="Create" class="btn btn-azul d-flex justify-content-center align-items-center gap-2 w-100">
                  CREAR USUARIO
                </a>
            </div>
 
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const successMessage = '@Html.Raw(TempData["Success"]?.ToString())';
            const errorMessage = '@Html.Raw(TempData["Error"]?.ToString())';

                   if (successMessage) {
            Swal.fire({
                title: "¡Módulo Usuarios!",
                text: successMessage,
                icon: "success",
                timer: 2000,
                showConfirmButton: false,
                timerProgressBar: true
            });
        }

            else if (errorMessage) {
                mostrarAlerta("¡Módulo Usuarios!", errorMessage, "error");
            }

            const input = document.getElementById("searchInput");
            if (input) {
                input.addEventListener("input", function () {
                    filtrarTablaPorColumnas("searchInput", "tablaUsuarios", [0, 1, 2, 3, 4]);
                });
            }

            // Contar usuarios que requieren restablecimiento
            const usuariosRestablecer = document.querySelectorAll('.requiere-restablecer').length;
            if (usuariosRestablecer > 0) {
                const contador = document.getElementById('contadorUsuarios');
                if (contador) {
                    contador.innerHTML += ` | <span class="text-warning"><i class="bi bi-key"></i> ${usuariosRestablecer} requieren restablecer contraseña</span>`;
                }
            }
        });

        function filtrarTablaPorColumnas(inputId, tablaId, columnas) {
            const filtro = document.getElementById(inputId)?.value.toLowerCase();
            const filas = document.querySelectorAll(`#${tablaId} tbody tr`);
            let visibles = 0;
            let restablecerVisibles = 0;

            filas.forEach(fila => {
                const coincide = columnas.some(index => {
                    const texto = fila.children[index]?.textContent.toLowerCase() || "";
                    return texto.includes(filtro);
                });
                fila.style.display = coincide ? "" : "none";
                if (coincide) {
                    visibles++;
                    if (fila.classList.contains('requiere-restablecer')) {
                        restablecerVisibles++;
                    }
                }
            });

            document.getElementById("noResults").style.display = visibles === 0 ? "block" : "none";
            const contador = document.getElementById("contadorUsuarios");
            if (contador) {
                contador.innerHTML = `Usuario${visibles === 1 ? "" : "s"} visible${visibles === 1 ? "" : "s"}: ${visibles}`;
                if (restablecerVisibles > 0) {
                    contador.innerHTML += ` | <span class="text-warning"><i class="bi bi-key"></i> ${restablecerVisibles} requieren restablecer</span>`;
                }
            }
        }

        function deleteItem(usuarioId) {
            Swal.fire({
                title: "¿Estás seguro?",
                text: "¡Una vez eliminado, no podrás recuperar este usuario!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Sí, eliminar",
                cancelButtonText: "Cancelar",
                confirmButtonColor: "#F20505",
                cancelButtonColor: "#3D6FAD"
            }).then((result) => {
               if (result.isConfirmed) {
                    window.location.href = '@Url.Action("Delete", "Usuario")' + '?id=' + usuarioId;
                }
            });
        }

        function mostrarAlerta(titulo, mensaje, tipo = "info") {
            Swal.fire({
                title: titulo,
                text: mensaje,
                icon: tipo,
                confirmButtonText: "Entendido",
                confirmButtonColor: "#3D6FAD"
            });
        }
    </script>
}